version: 2
jobs:

  # Install Node dependencies
  install:
    working_directory: ~/wimv
    docker:
      - image: circleci/node:8
    services:
      - docker
    steps:
      - checkout
      - run:
          name: Where am I?
          command: pwd
      - run:
          name: Which NPM Version?
          command: npm version
      - run:
          name: Which Yarn Version?
          command: yarn versions
      - type: cache-restore
        name: Restore yarn cache
        key: yarn-dependency-cache
      - type: cache-restore
        name: Restore node_modules cache
        key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install NPM Modules
          command: yarn install
      - type: cache-save
        name: Save node_modules cache
        key: dependency-cache-{{ checksum "yarn.lock" }}
        paths:
            - node_modules
      - type: cache-save
        name: Save yarn cache
        key: yarn-dependency-cache
        paths:
            - $HOME/.cache/yarn/v1

  # Execute Node tests
  test:
    working_directory: ~/wimv
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - type: cache-restore
        name: Restore node_modules cache
        key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Build CSS Files
          command: yarn run build-css
      - run:
          name: Execute Tests
          command: yarn run test

  # Build the static site (Single Page App)
  build:
    working_directory: ~/wimv
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - type: cache-restore
        name: Restore node_modules cache
        key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Build Deployment
          command: yarn run build
      - type: cache-save
        name: Save build cache
        key: build-{{ .Revision }}
        paths:
            - build

  # Deploy the assets from the build step to the appropriate S3 bucket.
  deploy:
    working_directory: ~/wimv
    docker:
      - image: circleci/python
    steps:
      - checkout
      - type: cache-restore
        name: Restore build cache
        key: build-{{ .Revision }}
      - run:
          name: Install AWS CLI
          command: sh .circleci/scripts/awscli-install.sh
      - run:
          name: Deploy via deploy.sh
          command: sh .circleci/scripts/deploy.sh

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install
      - test:
          requires:
            - install
      - build:
          requires:
            - test
      - deploy:
          filters:
            branches:
              only:
                - testing
                - staging
                - master
          requires:
            - build
